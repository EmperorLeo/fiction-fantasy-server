// <auto-generated />
using System;
using FictionFantasyServer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace FictionFantasyServer.NetCoreEntry.Migrations
{
    [DbContext(typeof(FFDbContext))]
    partial class FFDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("FictionFantasyServer.Data.Entities.BookEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AuthorId");

                    b.Property<DateTime>("Created");

                    b.Property<string>("MainIdea");

                    b.Property<DateTime?>("Modified");

                    b.Property<int>("PrimaryGenre");

                    b.Property<string>("Title");

                    b.Property<int>("Viewpoint");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("FictionFantasyServer.Data.Entities.CharacterEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Background");

                    b.Property<DateTime>("Created");

                    b.Property<string>("FullName");

                    b.Property<int>("Gender");

                    b.Property<DateTime?>("Modified");

                    b.Property<string>("Nickname");

                    b.Property<string>("Occupation");

                    b.Property<int>("Orientation");

                    b.HasKey("Id");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("FictionFantasyServer.Data.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Created");

                    b.Property<string>("Email");

                    b.Property<string>("FamilyName");

                    b.Property<string>("GivenName");

                    b.Property<DateTime?>("Modified");

                    b.Property<string>("ProfileDescription");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FictionFantasyServer.Data.Entities.BookEntity", b =>
                {
                    b.HasOne("FictionFantasyServer.Data.Entities.UserEntity", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
